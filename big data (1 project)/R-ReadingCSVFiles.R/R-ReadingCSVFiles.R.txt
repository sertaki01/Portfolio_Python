############################################################################
#                                                                          #
# Ανάγνωση CSV αρχείων με χρήση της R                                      #
#                                                                          #
############################################################################


# Γνωρίζουμε ότι το αρχείο περιέχει δεδομένα με τη μορφή CSV (=Comma Separated Values)


# Η εντολή setwd θέτει έναν συγκεκριμένο κατάλογο ως τον τρέχοντα φάκελο. 
# Δλδ αν γίνεται αναφορά σε αρχεία, αυτά υποτίθεται ότι βρίσκονται στον φάκελο αυτόν. 
# Βολεύει καθώς αποφεύγετε να δίνεται το πλήρες μονοπάτι αρχείων
# Θέτουμε ως τον τρέχoντα φάκελο, τον φάκελο π.χ. C:\msc\code . 
# ΠΡΟΣΟΧΗ! Δηλώστε ΤΟ ΣΩΣΤΟ ΦΑΚΕΛΟ για το δικό σας σύστημα!.

# Προσοχή στα διπλά \\. Χρειάζονται!
setwd("C:\\msc\\code")

# Ανάγνωση του CSV αρχείου που βρίσκεται στον φάκελο C:\msc\code  με χρήση της read.csv() συνάρτησης
# Ολόκληρο το περιεχόμενο του αρχείου θα αποθηκευτεί στη μεταβλητή mydata
# Το πρώτο όρισμα είναι το όνομα του αρχείου. Το δεύτερο (header=TRUE) αναφέρει ότι 
# η πρώτη γραμμή του αρχείου ΔΕΝ είναι γραμμή δεδομένων αλλά τα ονόματα των γνωρισμάτων/μεταβλητών.
# Το δεύτερο όρισμα  sep = "," αναφέρει ότι σε κάθε γραμμή, οι τιμές διαχωρίζονται με το κόμμα (,). Αν οι τιμές διαχωρίζονται με άλλον χαρακτήρα π.χ. # 
# το όρισμα αυτό θα έπρεπε να είναι  sep = "#" . Αν λείψει το όρισμα sep εννοείται το κόμμα (,).
mydata <- read.csv("taxpayers.csv", header=TRUE,  sep = ",")

# Έχουμε φορτώσει το αρχείο. Ας του ρίξουμε μία ματιά

# Εμφανίζει τις 5 πρώτες γραμμές των δεδομένων μας
head(mydata)

#Τί είδους μεταβλητή είναι όμως η mydata? είναι vector, list κλπ?
#Nope. Είναι data.frame βλ σχετικά εδώ: http://www.statmethods.net/input/datatypes.html για μία λίστα από τους διαθέσιμους τύπους δεδομένων στην R
class(mydata)


# Πόσες μεταβλητές έχουμε και πόσες παρατηρήσεις? 
# Γίνεται με τη χρήση της συνάρτησης dim()
# ΣΗΜ: το 12 5 που θα εμφανιστεί σημαίνει: 12 παρατηρήσεις, 5 μεταβλητές/γνωρίσματα κάθε παρατήρηση
dim(mydata)

# Τί τύπου δεδομένων είναι κάθε μεταβλητή/γνώρισμα που διαβάσαμε από το αρχείο? 
# Γίνεται με χρήση της συνάρτησης str()
# Δώστε έμφαση στα Factor, int κλπ που εμφανίζονται.
str(mydata)

# Μπορείτε να αλλάξετε τύπο ενός γνωρίσματος. 
# Για παράδειγμα το Name φαίνεται να είναι factor δλδ ονομαστική (nominal) τιμή. 
#Αλλαγή τύπου: θέλουμε το γνώρισμα Name να μην εκληφθεί ως factor από την R αλλά ως συμβολοσειρά δλδ character.
#Ο τύπος δεδομένων των τιμών του γνωρίσματος Name, αλλάζει ως εξής:
mydata$Name <- as.character(mydata$Name)

# Τώρα στο γνώρισμα Name δεν θα εμφανιστεί factor αλλά chr (=character) αφού αλλάξαμε τον τύπο του
str(mydata)

#Αναφορά σε συγκεκριμένη μεταβλητή στο σύνολο δεδομένων mydata.
# Χρήση του ονόματος επικεφαλίδας, που υπάρχει στο αρχείο.

# Π.χ. εμφάνιση όλων των τιμών της μεταβλητής/γνωρίσματος Name. Χρήση του τελεστή $
mydata$Name

# Αναφορά συγκεκριμένης τιμής μεταβλητής/γνωρίσματος μιας συγκεκριμένης παρατήρησης. Π.χ. η τιμή 
# του 4ου κατά σειρά γνωρίσματος της 3ης παρατήρησης.

mydata[3,4]

# Εναλλακτικός τρόπος εμφάνισης γνωρίσματος/μεταβλητής. 
# Π.χ. Εμφάνιση τις τιμές του 4ου γνωρίσματος για όλες τις παρατηρήσεις/γραμμές

mydata[,4] 

# Εμφάνιση όλων των τιμών μεταβλητών/γνωρισμάτων πλην του πρώτου γνωρίσματος  για όλες τις παρατηρήσεις.

mydata[,-1] 


#
# Φιλτράρισμα γραμμών βάσει κριτηρίων στο DataFrame
# Επιστροφή όλων των γραμμών που έχουν εισόδημα μικρότερο από 39000
# και αποθήκευση των γραμμών αυτών σε νέο DataFrame. 
# Χρήση συνάρτησης which() ως όρισμα για τον προσδιορισμό γραμμών που 
# πληρούν το κριτήριο.
# Αποθήκευσε σε νέο DataFrame (στη μεταβλητή under39K) όλες τις γραμμές 
# της mydata που πληρούν το κριτήριο mydata$Income<39000. Επέστρεψε όλες
# τις στήλες.
under39K<-mydata[which(mydata$Income<39000), ]



# Φιλτράρισμα γραμμών με τιμές που λείπουν.


# Εμφάνιση των γραμμών που έχουν τιμή που λείπουν σε συγκεκριμένη στήλη.
# Π.χ. γραμμές που έχουν τιμή που λείπει στη στήλη Income
# Δεν θα επιστρέψει καμία γραμμή, αφού όλες οι γραμμές έχουν τιμή 
# στη στήλη Income.
missingIncome <- mydata[is.na(mydata$Income),]

# Επιστροφή γραμμών που έχουν τιμή που λείπει στη στήλη YearsWorking
# η μεταβλητή DataFrame θα έχει μία γραμμή που, αφού αυτή
# έχει τιμή λείπει στη στήλη YearsWorking
missingYearsWorking<-mydata[is.na(mydata$YearsWorking),]

# Ίδιο με παραπάνω, αλλά χρήση της συνάρτησης subset
missingYearsWorking<-subset(mydata, is.na(mydata$YearsWorking))

# Ίδιο με παραπάνω, αλλά χρήση της συνάρτησης complete.cases() που επιστρέφει
# γραμμές που ΔΕΝ έχουν καμία missing value σε καμία στήλη. Δλδ όλες οι στήλες
# έχουν τιμή.
# ΠΡΟΣΟΧΗ! η έκφραση !complete.cases() που εμφανίζεται παρακάτω, επιστρέφει την άρνηση/το αντίθετο 
# του αποτελέσματος της complete.cases() και έτσι επιστρέφει τις γραμμές που έχουν τουλάχιστον
# μία τιμή που λείπει σε κάποια στήλη. Ο τελεστής ! είναι ο τελεστής της άρνησης.

rowsWithMissingValuesAnywhere <- mydata[!complete.cases(mydata), ]

# Η συνάρτηση complete.cases(mydata) επιστρέφει διάνυσμα με τιμή TRUE/FALSE, μία για κάθε γραμμή
# του DataFrme mydata. Τιμή TRUE σημαίνει ότι η αντίστοιχη γραμμή της mydata είναι πλήρης δλδ
# ΔΕΝ έχει τιμές που λείπουν σε καμία στήλη. Τιμή FALSE σημαίνει ότι η αντίστοιχη γραμμή της
# mydata έχει τουλάχιστον μία τιμή NA (missing value) σε κάποια στήλη της.



# Αφαίρεση γραμμών που περιέχουν τιμές που λείπουν 
# σε κάποια/οποιαδήποτε στήλη ενός DataFrame.


# Τρόπος με χρήση της complete.cases().
# ΠΡΟΣΟΧΗ! εδώ το αποτέλεσμα της παράστασης του δεξιού σκέλους της ανάθεσης 
# ΔΕΝ ανατίθεται σε νέα μεταβλητή
# αλλά στην υπάρχουσα mydata. Έτσι θα αντικατασταθεί το dataframe της mydata με νέο dataframe, που
# ΔΕΝ περιέχει πλέον γραμμές με τιμές που λείπουν.
mydata<-mydata[complete.cases(mydata), ]


# ’λλος τρόπος αφαίρεσης γραμμών από DataFrame που περιέχουν τιμές που λείπουν, με χρήση
# της na.omit(). 
# ΠΡΟΣΟΧΗ! Αν έχει εκτελεστεί η προηγούμενη γραμμή αφαίρεσης γραμμών με τιμές που λείπουν,
# η εκτέλεση της παρακάτω na.omit(mydata) δεν θα έχει επίπτωση, αφού γραμμές με missing values
# έχουν ήδη αφαιρεθεί.
mydata<-na.omit(mydata)

